@prefix rr: <http://www.w3.org/ns/r2rml#>.
@prefix  rml: <http://semweb.mmlab.be/ns/rml#> .
@prefix ql: <http://semweb.mmlab.be/ns/ql#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@base <http://geotriples.eu/base> .
@prefix rrx: <http://www.w3.org/ns/r2rml-ext#>.
@prefix rrxf: <http://www.w3.org/ns/r2rml-ext/functions/def/>.
@prefix ogc: <http://www.opengis.net/ont/geosparql#>.
@prefix schema: <http://schema.org/>.
@prefix onto: <http://ai.di.uoa.gr/OSM/ontology#>.

<#castle>
rml:logicalSource [
	rml:source "/geotriples-core-1.1.6-SNAPSHOT/../inout/castle.csv";
	rml:referenceFormulation ql:CSV;
	rml:iterator "castle";
];
rr:subjectMap [
	rr:template "http://ai.di.uoa.gr/OSM/castle/id/{GeoTriplesID}";
	rr:class onto:castle;
];
rr:predicateObjectMap [
	rr:predicateMap [ rr:constant onto:hasLatitude ];
	rr:objectMap [
		rr:datatype  xsd:string;
		rml:reference "latitude";
	];
];
rr:predicateObjectMap [
	rr:predicateMap [ rr:constant onto:hasLongitude ];
	rr:objectMap [
		rr:datatype  xsd:string;
		rml:reference "longitude";
	];
];
rr:predicateObjectMap [
	rr:predicateMap [ rr:constant onto:hasAltitude ];
	rr:objectMap [
		rr:datatype  xsd:string;
		rml:reference "altitude";
	];
];
rr:predicateObjectMap [
	rr:predicateMap [ rr:constant onto:hasGeometry ];
	rr:objectMap [
		rr:datatype  xsd:string;
		rml:reference "geometry";
	];
];
rr:predicateObjectMap [
	rr:predicateMap [ rr:constant onto:hasId ];
	rr:objectMap [
		rr:datatype  xsd:string;
		rml:reference "@id";
	];
];
rr:predicateObjectMap [
	rr:predicateMap [ rr:constant onto:hasHistoric ];
	rr:objectMap [
		rr:datatype  xsd:string;
		rml:reference "historic";
	];
];
rr:predicateObjectMap [
	rr:predicateMap [ rr:constant onto:hasMan_made ];
	rr:objectMap [
		rr:datatype  xsd:string;
		rml:reference "man_made";
	];
];
rr:predicateObjectMap [
	rr:predicateMap [ rr:constant onto:hasName ];
	rr:objectMap [
		rr:datatype  xsd:string;
		rml:reference "name";
	];
];
rr:predicateObjectMap [
	rr:predicateMap [ rr:constant onto:hasNameEn ];
	rr:objectMap [
		rr:datatype  xsd:string;
		rml:reference "name:en";
	];
];
rr:predicateObjectMap [
	rr:predicateMap [ rr:constant onto:hasCastle_type ];
	rr:objectMap [
		rr:datatype  xsd:string;
		rml:reference "castle_type";
	];
];
rr:predicateObjectMap [
	rr:predicateMap [ rr:constant onto:hasHistoricCivilization ];
	rr:objectMap [
		rr:datatype  xsd:string;
		rml:reference "historic:civilization";
	];
].

